name: Azure Arc Workflow
on:
  push:
    branches:
      - main
  pull_request: null
permissions:
  contents: read
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  
  ProvidersAndExtensions:
    runs-on: windows-latest
    

    steps:
      
    # Checkout code from repo
    - name: checkout repo
      uses: actions/checkout@v1

    
    # Read the parameters file
    - name: newSetVarFromJsonFileValue
      id: step_one
      run: |
        $myjsonfile = Import-PowerShellDataFile -Path .\newglobalparameters.json
        echo $myjsonfile
        echo $myjsonfile.PortNumber   
        echo "::set-env name=resourceGroupName::$($myjsonfile.resourceGroupName)"
        echo "::set-env name=dataControllername::$($myjsonfile.dataControllername)"
        echo "::set-env name=adConnectorname::$($myjsonfile.adConnectorname)"
        echo "::set-env name=sqlManagedInstanceName::$($myjsonfile.sqlManagedInstanceName)"
        echo "::set-env name=sqlAccountName::$($myjsonfile.sqlAccountName)"
        echo "::set-env name=PortNumber::$($myjsonfile.PortNumber)"        
        echo "::set-env name=AZDATA_USERNAME::$($myjsonfile.AZDATA_USERNAME)"
        echo "::set-env name=AZDATA_PASSWORD::$($myjsonfile.AZDATA_PASSWORD)"
        echo "::set-env name=ACCEPT_EULA::$($myjsonfile.ACCEPT_EULA)"
        echo "::set-env name=location::$($myjsonfile.location)"
        echo "::set-env name=CLUSTERNAME::$($myjsonfile.CLUSTERNAME)"
        echo "::set-env name=CLNAME::$($myjsonfile.CLNAME)"      
        echo "::set-env name=NAMESPACE::$($myjsonfile.NAMESPACE)"
        echo "::set-env name=PROFILENAME::$($myjsonfile.PROFILENAME)"
        echo "::set-env name=CONNECTIVITYMODE::$($myjsonfile.CONNECTIVITYMODE)"
        echo "::set-env name=AUTOUPLOADMETRICS::$($myjsonfile.AUTOUPLOADMETRICS)"
        echo "::set-env name=STORAGECLASS::$($myjsonfile.STORAGECLASS)"
      shell: pwsh
      

    # Read the parameters file
    - name: setVarFromJsonFileValue
      id: step_two
      run: |
       echo "##vso[task.setvariable variable=resourceGroupName;]$(jq .resourceGroupName globalparameters.json)" 
       echo "my resourceGroupName: "
       echo ${{env.resourceGroupName}}       
       echo ${{env.dataControllername}}
       echo ${{env.adConnectorname}}
       echo ${{env.sqlManagedInstanceName}}
       echo ${{env.sqlAccountName}}
       echo ${{env.PortNumber}}
       echo ${{env.CustomLocationName}}
       echo ${{env.AZDATA_USERNAME}}
       echo ${{env.AZDATA_PASSWORD}}
       echo ${{env.ACCEPT_EULA}}
       echo ${{env.location}}
       echo ${{env.CLUSTERNAME}}
       echo ${{env.CLNAME}}
       echo ${{env.NAMESPACE}}
       echo ${{env.CONNECTIVITYMODE}}
       echo ${{env.AUTOUPLOADMETRICS}}
       echo ${{env.STORAGECLASS}}
      shell: pwsh

    - name: RunScriptFromRepo
      env: #Set secrets as environment variables
        ARC_SP_CLIENT_ID: ${{ secrets.ARC_SP_CLIENT_ID }}
        ARC_SP_CLIENT_SECRET: ${{ secrets.ARC_SP_CLIENT_SECRET }}
        ARC_SP_TENANT_ID: ${{ secrets.ARC_SP_TENANT_ID }}
        ARC_AZURE_SUBSCRIPTION_ID: ${{ secrets.ARC_AZURE_SUBSCRIPTION_ID }}
        resourceGroup: ${{env.resourceGroupName}}
        dataControllername: ${{env.dataControllername}}
        adConnectorname: ${{env.adConnectorname}}
        sqlManagedInstanceName: ${{env.sqlManagedInstanceName}}
        sqlAccountName: ${{env.sqlAccountName}}
        PortNumber: ${{env.PortNumber}}
        CustomLocationName: ${{env.CustomLocationName}}
        AZDATA_USERNAME: ${{env.AZDATA_USERNAME}}
        AZDATA_PASSWORD: ${{env.AZDATA_PASSWORD}}
        ACCEPT_EULA: ${{env.ACCEPT_EULA}}
      run: .\test.ps1
      shell: pwsh